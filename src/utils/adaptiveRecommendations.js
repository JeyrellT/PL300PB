/**
 * üß† SISTEMA AVANZADO DE RECOMENDACIONES ADAPTATIVAS
 * Motor inteligente basado en an√°lisis de desempe√±o, repetici√≥n espaciada,
 * mastery learning y principios de aprendizaje adaptativo
 * 
 * MEJORAS 2025:
 * - FSRS (Free Spaced Repetition Scheduler) - reducci√≥n 20-30% reviews
 * - Zone of Proximal Development (ZPD) - selecci√≥n √≥ptima de preguntas
 * - Modelado mejorado de dificultad (Stability + Retrievability)
 */

import { getQuestionsForReview } from './fsrsScheduler';
import { ZPDSelector, LearningZone } from './zpdSelector';

// ============================================================================
// TIPOS Y PRIORIDADES
// ============================================================================

export const RECOMMENDATION_TYPE = {
  HABIT: 'habit',                    // Formaci√≥n de h√°bitos de estudio
  WEAKNESS: 'weakness',              // Refuerzo de puntos d√©biles
  REVIEW: 'review',                  // Revisi√≥n de errores (repetici√≥n espaciada)
  CHALLENGE: 'challenge',            // Aumentar dificultad
  MAINTENANCE: 'maintenance',        // Mantener fortalezas
  DIAGNOSTIC: 'diagnostic',          // Evaluaci√≥n diagn√≥stica
  MOTIVATIONAL: 'motivational',      // Motivaci√≥n y reconocimiento
  STRATEGY: 'strategy'               // Cambio de estrategia de estudio
};

export const PRIORITY = {
  CRITICAL: 5,
  HIGH: 4,
  MEDIUM: 3,
  LOW: 2,
  INFO: 1
};

// ============================================================================
// MOTOR DE RECOMENDACIONES ADAPTATIVAS
// ============================================================================

export class AdaptiveRecommendationEngine {
  constructor(profile) {
    this.profile = profile;
    this.recommendations = [];
  }
  
  /**
   * Genera recomendaciones personalizadas completas
   */
  generateRecommendations() {
    this.recommendations = [];
    
    // 1. An√°lisis de h√°bitos de estudio
    this.analyzeStudyHabits();
    
    // 2. An√°lisis de puntos d√©biles
    this.analyzeWeaknesses();
    
    // 3. An√°lisis de repetici√≥n espaciada
    this.analyzeSpacedRepetition();
    
    // 4. An√°lisis de desaf√≠o apropiado
    this.analyzeChallengeLevel();
    
    // 5. An√°lisis de mantenimiento de fortalezas
    this.analyzeStrengthMaintenance();
    
    // 6. An√°lisis de preparaci√≥n para examen
    this.analyzeExamReadiness();
    
    // 7. Motivaci√≥n y reconocimiento
    this.analyzeAchievements();
    
    // 8. An√°lisis de estrategia de estudio
    this.analyzeStudyStrategy();
    
    // Ordenar por prioridad y retornar
    return this.recommendations.sort((a, b) => b.priority - a.priority);
  }
  
  /**
   * 1. AN√ÅLISIS DE H√ÅBITOS DE ESTUDIO
   * Detecta falta de pr√°ctica y recomienda establecer h√°bitos
   */
  analyzeStudyHabits() {
    const { progress } = this.profile;
    const { questionsAnswered, currentStreak, lastActivityDate } = progress;
    
    // Verificar si hay actividad reciente
    const daysSinceLastActivity = this.getDaysSince(lastActivityDate);
    
    // CR√çTICO: Usuario inactivo por mucho tiempo
    if (daysSinceLastActivity > 7) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.HABIT,
        priority: PRIORITY.CRITICAL,
        icon: 'üî•',
        title: '¬°Te extra√±amos!',
        message: `Han pasado ${daysSinceLastActivity} d√≠as desde tu √∫ltima pr√°ctica. La consistencia es clave para retener conocimiento.`,
        action: {
          label: 'Retomar pr√°ctica',
          type: 'start-quiz',
          config: { numberOfQuestions: 10 }
        },
        insight: 'Estudios muestran que la pr√°ctica espaciada mejora la retenci√≥n hasta en un 200%.'
      });
      return; // Si est√° muy inactivo, esta es la prioridad
    }
    
    // Alto: Racha rota recientemente
    if (daysSinceLastActivity === 1 && currentStreak === 0) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.HABIT,
        priority: PRIORITY.HIGH,
        icon: 'üíî',
        title: 'Racha interrumpida',
        message: 'Tu racha de estudio se interrumpi√≥ ayer. ¬°No te desanimes! Comienza una nueva racha hoy.',
        action: {
          label: 'Iniciar nueva racha',
          type: 'start-quiz',
          config: { numberOfQuestions: 5 }
        },
        insight: 'Solo 5 minutos diarios pueden hacer la diferencia.'
      });
    }
    
    // Medio: Pocas preguntas respondidas (necesita establecer h√°bito)
    if (questionsAnswered < 20) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.HABIT,
        priority: PRIORITY.MEDIUM,
        icon: 'üéØ',
        title: 'Establece tu ritmo de estudio',
        message: 'Responder al menos 10 preguntas diarias te ayudar√° a formar un h√°bito de estudio consistente.',
        action: {
          label: 'Pr√°ctica diaria',
          type: 'start-quiz',
          config: { numberOfQuestions: 10 }
        },
        insight: 'La formaci√≥n de h√°bitos requiere al menos 21 d√≠as de pr√°ctica consistente.',
        goal: {
          current: questionsAnswered,
          target: 100,
          metric: 'preguntas'
        }
      });
    }
    
    // Bajo: Reconocimiento de buena racha
    if (currentStreak >= 3 && currentStreak < 7) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.MOTIVATIONAL,
        priority: PRIORITY.LOW,
        icon: 'üî•',
        title: '¬°Racha en progreso!',
        message: `Llevas ${currentStreak} d√≠as consecutivos de estudio. ¬°Sigue as√≠!`,
        action: {
          label: 'Continuar racha',
          type: 'start-quiz'
        },
        insight: 'Mantener una racha activa aumenta tu compromiso y retenci√≥n.'
      });
    }
    
    // Info: Racha excepcional
    if (currentStreak >= 7) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.MOTIVATIONAL,
        priority: PRIORITY.INFO,
        icon: '‚ö°',
        title: `¬°Racha de ${currentStreak} d√≠as!`,
        message: 'Tu consistencia es excepcional. Este h√°bito te llevar√° al √©xito en el examen.',
        insight: `Est√°s en el top 10% de estudiantes m√°s consistentes.`
      });
    }
  }
  
  /**
   * 2. AN√ÅLISIS DE PUNTOS D√âBILES
   * Identifica dominios y habilidades con bajo rendimiento
   */
  analyzeWeaknesses() {
    const { domainStats, skillsMastery, progress } = this.profile;
    
    // Necesita datos suficientes
    if (progress.questionsAnswered < 10) return;
    
    // Analizar dominios d√©biles
    const weakDomains = Object.entries(domainStats)
      .filter(([_, stats]) => stats.accuracy < 60 && stats.attempted >= 3)
      .sort((a, b) => a[1].accuracy - b[1].accuracy);
    
    if (weakDomains.length > 0) {
      const [weakestDomain, stats] = weakDomains[0];
      
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.WEAKNESS,
        priority: PRIORITY.HIGH,
        icon: 'üìä',
        title: `Refuerzo necesario: ${weakestDomain}`,
        message: `Tu precisi√≥n en ${weakestDomain} es ${stats.accuracy.toFixed(1)}%, por debajo del objetivo de 70%.`,
        action: {
          label: `Practicar ${weakestDomain}`,
          type: 'start-quiz',
          config: {
            domain: weakestDomain,
            numberOfQuestions: 15
          }
        },
        insight: 'Enfocarte en tus debilidades es la forma m√°s r√°pida de mejorar tu score general.',
        metrics: {
          current: stats.accuracy,
          target: 70,
          unit: '%'
        }
      });
    }
    
    // Analizar habilidades no dominadas
    const weakSkills = Object.entries(skillsMastery)
      .filter(([_, skill]) => 
        skill.masteryLevel === 'beginner' && skill.attempted >= 3
      )
      .sort((a, b) => a[1].accuracy - b[1].accuracy);
    
    if (weakSkills.length >= 3) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.WEAKNESS,
        priority: PRIORITY.MEDIUM,
        icon: 'üéì',
        title: 'M√∫ltiples habilidades por mejorar',
        message: `Tienes ${weakSkills.length} habilidades que necesitan m√°s pr√°ctica para alcanzar el nivel de dominio.`,
        action: {
          label: 'Pr√°ctica mixta',
          type: 'start-quiz',
          config: { numberOfQuestions: 20, level: 'basico' }
        },
        insight: 'La pr√°ctica variada ayuda a consolidar m√∫ltiples habilidades simult√°neamente.'
      });
    }
    
    // Analizar precisi√≥n general baja
    if (progress.accuracyOverall < 65 && progress.questionsAnswered >= 20) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.STRATEGY,
        priority: PRIORITY.HIGH,
        icon: 'üí°',
        title: 'Revisa tu estrategia de estudio',
        message: `Tu precisi√≥n general es ${progress.accuracyOverall.toFixed(1)}%. Considera estudiar el material te√≥rico antes de practicar.`,
        action: {
          label: 'Ver gu√≠a de estudio',
          type: 'view-guide'
        },
        insight: 'Combinar teor√≠a y pr√°ctica mejora la retenci√≥n en un 40%.',
        metrics: {
          current: progress.accuracyOverall,
          target: 75,
          unit: '%'
        }
      });
    }
  }
  
  /**
   * 3. AN√ÅLISIS DE REPETICI√ìN ESPACIADA
   * Identifica preguntas que necesitan revisi√≥n
   */
  analyzeSpacedRepetition() {
    const { questionTracking } = this.profile;
    
    // üî• MEJORA 2025: Usar FSRS para detecci√≥n m√°s precisa
    const readyForReview = getQuestionsForReview(questionTracking);
    
    // Filtrar por urgencia basado en retrievability
    const criticalReviews = readyForReview.filter(q => q.retrievability < 0.7);
    const normalReviews = readyForReview.filter(q => q.retrievability >= 0.7);
    
    // Si hay reviews cr√≠ticas (alta probabilidad de olvido)
    if (criticalReviews.length >= 3) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.REVIEW,
        priority: PRIORITY.CRITICAL,
        icon: '‚ö†Ô∏è',
        title: 'Review urgente necesaria',
        message: `${criticalReviews.length} preguntas en riesgo de olvido (${Math.round(criticalReviews[0]?.retrievability * 100)}% retenci√≥n).`,
        action: {
          label: 'Repasar urgente',
          type: 'review-mode',
          config: { questionIds: criticalReviews.map(q => q.questionId) }
        },
        insight: 'FSRS detect√≥ que estas preguntas necesitan review inmediato para evitar olvido completo.',
        metrics: {
          current: Math.round((criticalReviews[0]?.retrievability || 0) * 100),
          target: 90,
          unit: '% retenci√≥n'
        }
      });
    }
    // Si hay reviews normales
    else if (readyForReview.length >= 5) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.REVIEW,
        priority: PRIORITY.HIGH,
        icon: 'üîÑ',
        title: 'Revisi√≥n programada (FSRS)',
        message: `${readyForReview.length} preguntas listas para repasar en momento √≥ptimo.`,
        action: {
          label: 'Modo de revisi√≥n',
          type: 'review-mode',
          config: { questionIds: readyForReview.map(q => q.questionId) }
        },
        insight: 'Algoritmo FSRS optimiza el timing para maximizar retenci√≥n con m√≠nimo esfuerzo.',
        metrics: {
          current: readyForReview.length,
          unit: 'preguntas programadas'
        }
      });
    } else if (normalReviews.length > 0) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.REVIEW,
        priority: PRIORITY.MEDIUM,
        icon: 'üìù',
        title: 'Preguntas para repasar',
        message: `${normalReviews.length} pregunta(s) lista(s) para revisi√≥n.`,
        action: {
          label: 'Repasar ahora',
          type: 'review-mode',
          config: { questionIds: normalReviews.map(q => q.questionId) }
        }
      });
    }
    
    // Preguntas respondidas incorrectamente recientemente
    const recentErrors = Object.entries(questionTracking)
      .filter(([_, data]) => {
        const daysSince = this.getDaysSince(data.lastAttempt);
        return data.correct === 0 && daysSince <= 2;
      });
    
    if (recentErrors.length >= 3) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.REVIEW,
        priority: PRIORITY.MEDIUM,
        icon: '‚ùå',
        title: 'Errores recientes',
        message: `Has fallado ${recentErrors.length} preguntas en los √∫ltimos 2 d√≠as. Rep√°salas ahora para reforzar.`,
        action: {
          label: 'Revisar errores',
          type: 'review-mode',
          config: { questionIds: recentErrors.map(([id]) => id) }
        },
        insight: 'Corregir errores inmediatamente previene la consolidaci√≥n de informaci√≥n incorrecta.'
      });
    }
  }
  
  /**
   * 4. AN√ÅLISIS DE NIVEL DE DESAF√çO
   * üî• MEJORA 2025: Usa Zone of Proximal Development (ZPD)
   * Recomienda aumentar o disminuir dificultad basado en zona √≥ptima
   */
  analyzeChallengeLevel() {
    const { progress, questionTracking } = this.profile;
    
    if (progress.questionsAnswered < 30) return;
    
    // Analizar zona actual del usuario
    const zoneAnalysis = ZPDSelector.analyzeUserZone(this.profile, questionTracking);
    const recommendation = ZPDSelector.recommendNextAction(this.profile, questionTracking);
    
    // Si est√° en comfort zone (muchas preguntas f√°ciles)
    if (zoneAnalysis.comfortPercentage > 60) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.CHALLENGE,
        priority: PRIORITY.HIGH,
        icon: 'üöÄ',
        title: '¬°Sal de tu zona de confort!',
        message: `${zoneAnalysis.comfortPercentage}% de tus preguntas son muy f√°ciles. Aumenta el desaf√≠o.`,
        action: {
          label: 'Quiz adaptativo ZPD',
          type: 'start-quiz',
          config: { 
            mode: 'zpd',
            targetZone: LearningZone.ZPD,
            numberOfQuestions: 15 
          }
        },
        insight: `${recommendation.reasoning}. La zona √≥ptima tiene 40-70% dificultad.`,
        metrics: {
          current: zoneAnalysis.comfortPercentage,
          target: 40,
          unit: '% en zona confort'
        }
      });
    }
    
    // Si est√° en frustration zone (muchas preguntas muy dif√≠ciles)
    else if (zoneAnalysis.frustrationPercentage > 40) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.STRATEGY,
        priority: PRIORITY.HIGH,
        icon: 'üìñ',
        title: 'Refuerza fundamentos primero',
        message: `${zoneAnalysis.frustrationPercentage}% de preguntas est√°n muy dif√≠ciles. Construye base s√≥lida.`,
        action: {
          label: 'Quiz b√°sico ZPD',
          type: 'start-quiz',
          config: { 
            mode: 'zpd',
            targetZone: LearningZone.COMFORT,
            numberOfQuestions: 15 
          }
        },
        insight: `${recommendation.reasoning}. Domina fundamentos antes de avanzar.`,
        metrics: {
          current: zoneAnalysis.frustrationPercentage,
          target: 20,
          unit: '% en frustraci√≥n'
        }
      });
    }
    
    // Si est√° en ZPD √≥ptima
    else if (zoneAnalysis.zpdPercentage >= 40) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.MOTIVATIONAL,
        priority: PRIORITY.LOW,
        icon: 'üéØ',
        title: '¬°Zona de aprendizaje √≥ptima!',
        message: `${zoneAnalysis.zpdPercentage}% de tus preguntas est√°n en la zona perfecta de desaf√≠o.`,
        action: {
          label: 'Continuar en ZPD',
          type: 'start-quiz',
          config: { 
            mode: 'zpd',
            numberOfQuestions: 15 
          }
        },
        insight: 'Mant√©n este equilibrio para maximizar tu progreso de aprendizaje.',
      });
    }
    
    // Rendimiento estancado
    const recentAccuracy = this.calculateRecentAccuracy();
    if (recentAccuracy !== null && Math.abs(recentAccuracy - progress.accuracyOverall) < 5 && progress.questionsAnswered >= 50) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.STRATEGY,
        priority: PRIORITY.LOW,
        icon: 'üìà',
        title: 'Rompe la meseta',
        message: 'Tu precisi√≥n se ha estabilizado. Intenta variar tus dominios de pr√°ctica o nivel de dificultad.',
        action: {
          label: 'Pr√°ctica variada',
          type: 'start-quiz',
          config: { domain: 'all', level: 'all', numberOfQuestions: 20 }
        },
        insight: 'La variabilidad en la pr√°ctica mejora la transferencia de conocimiento.'
      });
    }
  }
  
  /**
   * 5. AN√ÅLISIS DE MANTENIMIENTO DE FORTALEZAS
   * Asegura que las habilidades dominadas no se olviden
   */
  analyzeStrengthMaintenance() {
    const { skillsMastery } = this.profile;
    
    // Habilidades dominadas que no se han practicado recientemente
    const neglectedMasteredSkills = Object.entries(skillsMastery)
      .filter(([_, skill]) => {
        const daysSince = this.getDaysSince(skill.lastPracticed);
        return skill.masteryLevel === 'mastered' && daysSince > 14;
      });
    
    if (neglectedMasteredSkills.length > 0) {
      const [skillId, skill] = neglectedMasteredSkills[0];
      const daysSince = this.getDaysSince(skill.lastPracticed);
      
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.MAINTENANCE,
        priority: PRIORITY.LOW,
        icon: 'üîß',
        title: 'Mant√©n tus fortalezas',
        message: `No has practicado ${skill.skillName} en ${daysSince} d√≠as. Un repaso breve mantendr√° tu dominio.`,
        action: {
          label: 'Repaso r√°pido',
          type: 'start-quiz',
          config: { skill: skillId, numberOfQuestions: 5 }
        },
        insight: 'Incluso las habilidades dominadas necesitan repaso ocasional para evitar el olvido.'
      });
    }
  }
  
  /**
   * 6. AN√ÅLISIS DE PREPARACI√ìN PARA EXAMEN
   * Eval√∫a la preparaci√≥n general y hace recomendaciones estrat√©gicas
   */
  analyzeExamReadiness() {
    const readiness = this.calculateReadinessScore();
    
    // Listo para examen de simulacro
    if (readiness.overall >= 70 && readiness.level === 'Casi Listo') {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.DIAGNOSTIC,
        priority: PRIORITY.HIGH,
        icon: 'üéØ',
        title: '¬°Listo para simulacro!',
        message: `Con ${readiness.overall}% de preparaci√≥n, est√°s listo para un examen de simulacro completo.`,
        action: {
          label: 'Examen simulacro',
          type: 'start-quiz',
          config: { numberOfQuestions: 50, level: 'all', domain: 'all' }
        },
        insight: 'Los ex√°menes de simulacro te preparan para la experiencia real y revelan √°reas finales de mejora.',
        metrics: {
          current: readiness.overall,
          target: 100,
          unit: '% preparaci√≥n'
        }
      });
    }
    
    // Necesita mejorar cobertura
    if (readiness.coverage < 50) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.STRATEGY,
        priority: PRIORITY.MEDIUM,
        icon: 'üó∫Ô∏è',
        title: 'Ampl√≠a tu cobertura',
        message: `Has cubierto ${readiness.coverage.toFixed(0)}% del temario. Explora m√°s dominios para una preparaci√≥n completa.`,
        action: {
          label: 'Explorar todos los dominios',
          type: 'start-quiz',
          config: { domain: 'all', numberOfQuestions: 20 }
        },
        insight: 'El examen real cubre todos los dominios. Aseg√∫rate de practicar cada uno.',
        metrics: {
          current: readiness.coverage,
          target: 100,
          unit: '% cobertura'
        }
      });
    }
    
    // Comenzando - necesita evaluaci√≥n diagn√≥stica
    if (readiness.level === 'Comenzando') {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.DIAGNOSTIC,
        priority: PRIORITY.HIGH,
        icon: 'üìã',
        title: 'Evaluaci√≥n diagn√≥stica',
        message: 'Toma una evaluaci√≥n diagn√≥stica para identificar tu nivel actual en cada dominio.',
        action: {
          label: 'Iniciar diagn√≥stico',
          type: 'diagnostic-quiz'
        },
        insight: 'Una evaluaci√≥n inicial te ayuda a enfocar tu estudio en lo que realmente necesitas.'
      });
    }
  }
  
  /**
   * 7. AN√ÅLISIS DE LOGROS Y MOTIVACI√ìN
   * Reconoce logros y motiva al usuario
   */
  analyzeAchievements() {
    const { progress } = this.profile;
    
    // Cerca de un hito importante
    if (progress.questionsAnswered >= 95 && progress.questionsAnswered < 100) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.MOTIVATIONAL,
        priority: PRIORITY.LOW,
        icon: 'üéì',
        title: '¬°Casi 100 preguntas!',
        message: `Solo ${100 - progress.questionsAnswered} preguntas m√°s para alcanzar tu primer centenar.`,
        action: {
          label: 'Completar hito',
          type: 'start-quiz',
          config: { numberOfQuestions: 5 }
        },
        metrics: {
          current: progress.questionsAnswered,
          target: 100,
          unit: 'preguntas'
        }
      });
    }
    
    // Reconocimiento de nivel alto
    if (progress.currentLevel >= 5) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.MOTIVATIONAL,
        priority: PRIORITY.INFO,
        icon: '‚≠ê',
        title: `Nivel ${progress.currentLevel} alcanzado`,
        message: 'Tu dedicaci√≥n y esfuerzo est√°n dando resultados. ¬°Sigue adelante!',
        insight: 'Est√°s en el camino correcto hacia la certificaci√≥n.'
      });
    }
    
    // Precisi√≥n excelente
    if (progress.accuracyOverall >= 85 && progress.questionsAnswered >= 30) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.MOTIVATIONAL,
        priority: PRIORITY.INFO,
        icon: 'üíØ',
        title: 'Precisi√≥n excepcional',
        message: `${progress.accuracyOverall.toFixed(1)}% de precisi√≥n demuestra tu s√≥lida comprensi√≥n del material.`,
        insight: 'Con este nivel de dominio, est√°s bien encaminado para aprobar el examen.'
      });
    }
  }
  
  /**
   * 8. AN√ÅLISIS DE ESTRATEGIA DE ESTUDIO
   * Detecta patrones problem√°ticos y sugiere mejoras
   */
  analyzeStudyStrategy() {
    const { progress, domainStats } = this.profile;
    
    // Tiempo promedio muy bajo (posible respuestas apresuradas)
    const avgTime = progress.totalTimeSpent / progress.questionsAnswered;
    if (avgTime < 15 && progress.questionsAnswered >= 20) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.STRATEGY,
        priority: PRIORITY.MEDIUM,
        icon: '‚è±Ô∏è',
        title: 'T√≥mate tu tiempo',
        message: `Tu tiempo promedio de ${avgTime.toFixed(0)}s por pregunta es muy bajo. Lee cuidadosamente cada pregunta.`,
        insight: 'La velocidad es buena, pero la comprensi√≥n es m√°s importante.'
      });
    }
    
    // Enfoque excesivo en un solo dominio
    const domainCount = Object.keys(domainStats).length;
    const totalAttempts = Object.values(domainStats).reduce((sum, s) => sum + s.attempted, 0);
    const mostPracticedDomain = Object.entries(domainStats)
      .sort((a, b) => b[1].attempted - a[1].attempted)[0];
    
    if (mostPracticedDomain && mostPracticedDomain[1].attempted / totalAttempts > 0.6 && domainCount >= 2) {
      this.addRecommendation({
        type: RECOMMENDATION_TYPE.STRATEGY,
        priority: PRIORITY.LOW,
        icon: 'üé®',
        title: 'Diversifica tu pr√°ctica',
        message: `${(mostPracticedDomain[1].attempted / totalAttempts * 100).toFixed(0)}% de tu pr√°ctica est√° en ${mostPracticedDomain[0]}. Practica otros dominios tambi√©n.`,
        action: {
          label: 'Pr√°ctica variada',
          type: 'start-quiz',
          config: { domain: 'all', numberOfQuestions: 15 }
        },
        insight: 'Una pr√°ctica balanceada entre dominios mejora tu preparaci√≥n general.'
      });
    }
  }
  
  // ========================================================================
  // UTILIDADES
  // ========================================================================
  
  addRecommendation(recommendation) {
    this.recommendations.push({
      id: `rec_${Date.now()}_${Math.random()}`,
      timestamp: Date.now(),
      ...recommendation
    });
  }
  
  getDaysSince(timestamp) {
    if (!timestamp) return Infinity;
    const date = typeof timestamp === 'string' ? new Date(timestamp) : new Date(timestamp);
    const now = new Date();
    const diffTime = Math.abs(now - date);
    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  }
  
  calculateRecentAccuracy() {
    // Implementar c√°lculo de precisi√≥n en √∫ltimas N preguntas
    // Para simplificar, retornamos null por ahora
    return null;
  }
  
  calculateReadinessScore() {
    const { progress, skillsMastery } = this.profile;
    
    // Coverage: porcentaje del banco de preguntas explorado
    const totalQuestions = 100; // Ajustar seg√∫n banco real
    const coverage = Math.min(100, (progress.questionsAnswered / totalQuestions) * 100);
    
    // Mastery: promedio de dominio en habilidades
    const masteredSkills = Object.values(skillsMastery)
      .filter(s => s.masteryLevel === 'mastered' || s.masteryLevel === 'proficient').length;
    const totalSkills = Math.max(1, Object.keys(skillsMastery).length);
    const mastery = (masteredSkills / totalSkills) * 100;
    
    // Consistency: basado en precisi√≥n y racha
    const consistency = (progress.accuracyOverall * 0.7) + (Math.min(progress.currentStreak, 14) / 14 * 30);
    
    // Score general (ponderado)
    const overall = (coverage * 0.3) + (mastery * 0.4) + (consistency * 0.3);
    
    // Determinar nivel
    let level = 'Comenzando';
    if (overall >= 85) level = 'Listo';
    else if (overall >= 70) level = 'Casi Listo';
    else if (overall >= 50) level = 'En Progreso';
    else if (overall >= 30) level = 'Desarrollando';
    
    return {
      overall: Math.round(overall),
      coverage: Math.round(coverage),
      mastery: Math.round(mastery),
      consistency: Math.round(consistency),
      level
    };
  }
}

/**
 * Funci√≥n de conveniencia para generar recomendaciones
 */
export function generatePersonalizedRecommendations(profile) {
  const engine = new AdaptiveRecommendationEngine(profile);
  return engine.generateRecommendations();
}

/**
 * Calcula el score de preparaci√≥n
 */
export function calculateReadinessScore(profile) {
  const engine = new AdaptiveRecommendationEngine(profile);
  return engine.calculateReadinessScore();
}
